@model Doshka.Models.Ad

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.Title,
                new {@class = "control-label col-xs-2 col-sm-2 col-md-2 col-lg-2"})
            <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10">
                @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price,
                new {@class = "control-label col-xs-2 col-sm-2 col-md-2 col-lg-2"})
            <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10">
                @Html.EditorFor(model => model.Price, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Price, "", new {@class = "text-danger"})
            </div>
        </div>

        @*<div class="col-xs-10 col-sm-10 col-md-10 col-lg-10">
            <div class="btn-group">
                <button type="button" class="btn btn-default dropdown-toggle"
                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Sale <span class="caret"></span>
                </button>
                <ul class="dropdown-menu">
                    <li><a href="#">Sale</a></li>
                    <li><a href="#">Exchange</a></li>
                    <li><a href="#">Give Away</a></li>
                    <li><a href="#">Purchase</a></li>
                </ul>
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Type,
                new { @class = "control-label col-xs-2 col-sm-2 col-md-2 col-lg-2" })
            <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10 ">
                @Html.DropDownListFor(model => model.Type, new List<SelectListItem>
                {
                    new SelectListItem
                    {
                        Text = "Sale",
                        Value = "1"
                    },
                    new SelectListItem
                    {
                        Text = "Exchange",
                        Value = "2",
                    },
                    new SelectListItem
                    {
                        Text = "Give Away",
                        Value = "3"
                    },
                    new SelectListItem
                    {
                        Text = "Purchase",
                        Value = "4"
                    }
                }, new
                {
                    htmlAttributes = new { @class = "form-control" },
                    @class = "btn btn-default dropdown-toggle form-control"
                })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-xs-2 col-sm-2 col-md-2 col-lg-2" })
            <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10">
                <select class="form-control">
                    @Html.RadioButtonFor(model => model.Type, "Sale") Sale
                    @Html.RadioButtonFor(model => model.Type, "Exchange") Exchange
                    @Html.RadioButtonFor(model => model.Type, "Give Away") Give Away
                    @Html.RadioButtonFor(model => model.Type, "Purchase") Purchase
                </select>
            </div>
        </div>*@


        <div class="form-group">
            @Html.LabelFor(model => model.Description, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default"/>
            </div>
        </div>
    </div>
}